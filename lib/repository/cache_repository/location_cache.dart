part of 'cache_repository.dart';

/// Location cache
/// Used to store locations generated by the reader.
class LocationCache {
  get _rootPath => join(CacheRepository.cachePath, 'locations');

  File _getTmpFileByPath(String bookPath) {
    final relativePath = BookRepository.getRelativePath(bookPath);
    return File(
        join(_rootPath, '${basenameWithoutExtension(relativePath)}.tmp'));
  }

  /// Store the location to the cache file.
  void store(String bookPath, String location) {
    final file = _getTmpFileByPath(bookPath);
    if (!file.existsSync()) {
      file.createSync(recursive: true);
    }
    file.writeAsStringSync(location);
  }

  /// Retrieve the location from the cache file.
  String? get(String bookPath) {
    final file = _getTmpFileByPath(bookPath);
    if (file.existsSync()) {
      return file.readAsStringSync();
    } else {
      return null;
    }
  }

  /// Delete the location cache file.
  void delete(String bookPath) {
    final file = _getTmpFileByPath(bookPath);
    if (file.existsSync()) {
      file.deleteSync();
    }
  }

  /// Delete all location cache files.
  void clear() {
    final folder = Directory(_rootPath);
    if (folder.existsSync()) {
      folder.deleteSync(recursive: true);
    }
  }
}
